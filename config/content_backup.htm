<h1>Introduction</h1>
<p><span>leader:40723221 邱正宇 :</span></p>
<p><span>期中自評:80</span></p>
<p><span>個人網站:<a href="https://mdecp2018.github.io/site-s40723221/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723221/content/index.html</a></span></p>
<p>40723212 李建杰:     </p>
<p><span>期中自評:80</span></p>
<p><span>個人網站 </span><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723212/content/index.html</a>      </p>
<p>  40723213 杜玗宸 :</p>
<p><span>期中自評:70</span></p>
<p><span>個人網站 </span><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723213</a><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">/content/index.html</a>                          </p>
<p> 40723215 杜彥霆:</p>
<p><span>期中自評:70</span></p>
<p><span>個人網站 </span><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723215</a><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">/content/index.html</a>  </p>
<p>40723226 林子欽: </p>
<p><span>期中自評:70</span></p>
<p><span>個人網站 </span><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723226/content/index.html</a>          </p>
<p><span></span>40723224 范誠宇:</p>
<p><span>期中自評:70</span></p>
<p><span>個人網站 </span><a href="https://mdecp2018.github.io/site-s40723226/content/index.html" rel="nofollow">https://mdecp2018.github.io/site-s40723224/content/index.html</a>  <span style="background-color: #ffffff; color: #626262;"></span></p>
<h1>Independent study</h1>
<h2>python basic syntax(python 基本用法)</h2>
<h3>參考書籍</h3>
<h3>一.編碼</h3>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">在電腦裡，繁體中文編碼主要分為BIG-5及UTF-8，以上兩種python 都支援，但</span><fonr face="標楷體"><span style="font-size: large;">UTF-8和BIG-5最大差異為於<span style="color: #ff0000;">語系相容性<span style="color: #000000;">。<br/>BIG-5專門作為繁體中文的編碼方式，因此對於其他語系的系統相容性較低；反之UTF-8是符合Unicode格式，因此UTF-8對於繁體中文以外的語系相容性較佳。</span></span></span></fonr></span></p>
<p style="text-align: left;"><span style="font-size: large;"><span style="color: #ff0000;"><span style="color: #000000;"><span style="font-family: 標楷體;">在python3.X版以後的版本將UTF-8設為預設編碼，因此不下手動執行編碼動作也可使用中文。</span></span></span></span></p>
<p style="text-align: center;"><strong><span style="font-size: large;"><span style="font-family: helvetica;">#_*_conding:UTF-8_*_</span></span></strong></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">上述為python<span style="color: #ff0000;">標準編碼</span>，「#」為註解意思，電腦在執行程式時會自動跳過註解；若「</span></span><span style="font-family: 標楷體;"><span style="font-size: large;"></span></span><span style="font-family: 標楷體;"><span style="font-size: large;">#」號後面接「coding:編碼方式」時，整句陳述句會變成宣告編碼的意思，此時電腦便不會跳過而是將其解讀為宣告編碼。</span></span></p>
<p><span style="font-family: 標楷體; font-size: large;">因python版本不斷演進，以至於標準編碼中的_*_可省去，直接執行#coding:就可以了。<br/>                 </span></p>
<p style="text-align: center;"><span style="color: #ff0000;"><strong><span style="font-family: 標楷體; font-size: large;">以下為標準碼延伸說明</span></strong></span></p>
<table border="1" style="border-collapse: collapse; width: 116.931%; height: 282px;">
<tbody>
<tr style="height: 47px;">
<td style="width: 39.1424%; height: 47px;"><span style="font-size: large;"><span style="font-family: helvetica;">#_*_conding:UTF-8_*_</span></span></td>
<td style="width: 69.019%;"><span style="font-family: 標楷體;"><span style="font-size: large;">#正式寫法，python編碼聲明格式</span></span></td>
</tr>
<tr style="height: 47px;">
<td style="width: 39.1424%; height: 47px;"><span style="font-size: large;"><span style="font-family: helvetica;">#coding:UTF-8</span></span></td>
<td style="width: 69.019%; height: 47px;"><span style="font-family: 標楷體;"><span style="font-size: large;">#可捨棄_*_</span></span></td>
</tr>
<tr style="height: 47px;">
<td style="width: 39.1424%; height: 47px;"><span style="font-size: large;"><span style="font-family: helvetica;">#encoding:UTF-8</span></span></td>
<td style="width: 69.019%; height: 47px;"><span style="font-family: 標楷體;"><span style="font-size: large;">#coding 亦可使用encoding取代</span></span></td>
</tr>
<tr style="height: 47px;">
<td style="width: 39.1424%; height: 47px;"><span style="font-size: large;"><span style="font-family: helvetica;">#coding=UTF-8</span></span></td>
<td style="width: 69.019%; height: 47px;"><span style="font-family: 標楷體;"><span style="font-size: large;">#:可用=取代</span></span></td>
</tr>
<tr style="height: 47px;">
<td style="width: 39.1424%; height: 47px;"><span style="font-size: large;"><span style="font-family: helvetica;">#    coding:    UTF-8</span></span></td>
<td style="width: 69.019%; height: 47px;"><span style="font-family: 標楷體;"><span style="font-size: large;">#後可容許空格</span></span></td>
</tr>
</tbody>
</table>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">注意:2.7版的coding與:或=間不容許空格<br/>     3.3版之後的版本是允許空格的</span></span></p>
<h3>二.資料型態</h3>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">在python資料庫裡，資料會以各種不同形態儲存在電腦裡以利python進行讀取，其資料型態可分為數值型別(Numeric Type)、字串型別(String Type)及容器型別(Container Type)。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">1.數值型別(Numeric Type)：         </span></span></p>
<ul>
<li><span style="font-size: large;"><span style="font-family: 標楷體;">int：integer的縮寫，也就是整數的意思負責儲存沒有小數點              的整數數值</span></span></li>
<li><span style="font-family: 標楷體; font-size: large;">float：浮點數，可以儲存具有小數點的數值</span></li>
<li><span style="font-family: 標楷體; font-size: large;">bool：boolean的縮寫中文統稱<span style="font-family: 標楷體;"><span style="font-size: large;">「</span></span>布林<span style="font-family: 標楷體;"><span style="font-size: large;">」，boolean只有只有三             種資料數值，包括「<span style="font-family: 標楷體; font-size: large;">True 真</span>」、「False 假」及「None</span></span></span><span style="font-family: 標楷體; font-size: large;"><span style="font-family: 標楷體;"><span style="font-size: large;">錯誤」</span></span></span></li>
<li><span style="font-family: 標楷體; font-size: large;"><span style="font-family: 標楷體;"><span style="font-size: large;">complex：代表數學中的虛數並以complex(x,y)的形式出現，其中X為實部數字，Y為虛部數字。除此之外也可在數字後面直接加j來代表虛部數字。如：1+5j、6.7-4.5j</span></span></span><span style="font-family: 標楷體; font-size: large;"><span style="font-family: 標楷體;"><span style="font-size: large;"></span></span></span></li>
</ul>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">2.字串型別(String Type)：<br/></span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">在python裡可使用<span style="font-family: 標楷體; font-size: large;">「" "」</span><span style="font-family: 標楷體; font-size: large;">「' '」將文字包覆住，而這些東西都代表字串的意思，字串可被拆解使用同時字串也有前後順序特性。</span></span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="font-family: 標楷體; font-size: large;">EX：字串變數X="Hello, world"裡，X這個字串裡面有12個字元，依序為「H」「e」「l」「l」「o」「,」「 」「w」「o」「r」「 l」「d」如果要取出X裡的第8字元就必須下<span style="color: #ff0000;">X[7]</span>的指令。</span></span></span></p>
<p><strong><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="font-family: 標楷體; font-size: large;">至於為何是X[7]，在電腦運算中是從0開始，所以從0算到8剛好是8個</span></span></span></strong></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">3.容器型別(Container Type)：<br/></span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">這個型別裡的資料就像是置物箱一樣可裝入各式各樣的資料，同時也可在箱子裡裝入其他的箱子</span></span><span style="font-size: large;"><span style="font-family: 標楷體;"></span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"></span></span></p>
<table border="1" style="border-collapse: collapse; width: 89.7638%;">
<tbody>
<tr>
<td style="width: 119.2px;">容器類型</td>
<td style="width: 83.2px;">tuple</td>
<td style="width: 81.6px;">list</td>
<td style="width: 90.4px;">set</td>
<td style="width: 80.8px;">dict</td>
</tr>
<tr>
<td style="width: 119.2px;">中文譯名</td>
<td style="width: 83.2px;">序對</td>
<td style="width: 81.6px;">串列</td>
<td style="width: 90.4px;">集合</td>
<td style="width: 80.8px;">字典</td>
</tr>
<tr>
<td style="width: 119.2px;">使用符號</td>
<td style="width: 83.2px;">(   )</td>
<td style="width: 81.6px;">[  ]</td>
<td style="width: 90.4px;">{  }</td>
<td style="width: 80.8px;">{  }</td>
</tr>
<tr>
<td style="width: 119.2px;">是否有順序性</td>
<td style="width: 83.2px;">有</td>
<td style="width: 81.6px;">有</td>
<td style="width: 90.4px;">無</td>
<td style="width: 80.8px;">無</td>
</tr>
<tr>
<td style="width: 119.2px;">是否可更改內容</td>
<td style="width: 83.2px;">不可以</td>
<td style="width: 81.6px;">可以</td>
<td style="width: 90.4px;">可以</td>
<td style="width: 80.8px;">可以<br/><br/></td>
</tr>
</tbody>
</table>
<ul>
<li><span style="font-family: 標楷體; font-size: large;">tuple：序對，在()中可以放置一個以上的資料值，有順序性但不能更改其內容。</span></li>
<li><span style="font-family: 標楷體; font-size: large;">list：串列，在[]中可以放置一個以上的資料值，是一種有順序且可以更改其內容型態。</span></li>
<li><span style="font-family: 標楷體; font-size: large;">set：集合，在{}中可以放置一個以上的資料值，類似數學裡的集合概念所以內容並無順序性。</span></li>
<li><span style="font-family: 標楷體; font-size: large;">dict：字典，是dictionary的縮寫，以Key-Value對應的型態在{}裡放置一個以上的元素。字典是種配對型別也可以放置一個以上的資料值，而Key就是用來存取每個Value的索引值。</span><span style="font-family: 標楷體; font-size: large;"></span></li>
</ul>
<h3>三.註解</h3>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">一般來說，註解是為了讓開發者更迅速地理解程式碼的目的、功能及使用方式。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">除了「<span>#</span>」外，還可使用單<span>/</span>雙引號作為註解，單<span>/</span>雙引號功能相同但不能混用。</span></span></p>
<h3>四.縮排</h3>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">相較於Java或C語言，python沒有{ }來當作區分程式碼的區隔，而是用縮排來區分，因此相較於其他程式語言，縮排的目的僅在於方便閱讀，</span></span></p>
<p><span style="font-family: 標楷體; font-size: large;"></span></p><h2>variable+assignment+operator(變數+賦值+運算值)</h2>
<h3>一.變數</h3>
<ul>
<li style="text-align: left;"><span style="font-family: 標楷體;"><span style="font-size: large;">變數在python中代表了物件就像在生活中的物品一樣而此物件會藉由一種總稱來代表,例如:學生之學號 .身分證字號。而在python中則用以下例句來表示:<span style="color: #ff9900;">變數 = 123 print(變數)      則出來之結果為123。</span></span></span></li>
</ul>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">關鍵字在python中為代表了其特殊意義之字樣。例如:true  false  none  def  for  等都是常見的字元。</span></span></p>
<ol>
<li>紅色字體代表<span style="color: #ff0000;">常數</span></li>
<li><span style="color: #000000;"><span style="font-family: 標楷體;"><span style="font-size: large;">橘黃色字體代表<span style="color: #ffcc00;">型態定義</span></span></span></span></li>
<li><span style="color: #000000;"><span style="font-family: 標楷體;"><span style="font-size: large;">黑色字體代表控制陳述</span></span></span></li>
<li><span style="color: #000000;"><span style="font-family: 標楷體;"><span style="font-size: large;">藍色字體代表<span style="color: #00ffff;"><span style="color: #33cccc;">運算子</span></span></span></span></span></li>
<li><span style="color: #000000;"><span style="font-family: 標楷體;"><span style="font-size: large;">綠色字體代表<span style="color: #339966;">模組相關</span></span></span></span></li>
</ol>
<table border="1" style="border-collapse: collapse; width: 100%;">
<tbody>
<tr>
<td style="width: 14.2857%;"><span style="color: #ff0000;"><span style="font-family: helvetica;"><span style="font-size: large;">False</span></span></span></td>
<td style="width: 14.2857%;">assert</td>
<td style="width: 14.2857%;">del</td>
<td style="width: 14.2857%;">for</td>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">in</span></span></span></td>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">or</span></span></span></td>
<td style="width: 14.2857%;">while</td>
</tr>
<tr>
<td style="width: 14.2857%;"><span style="color: #ff0000;"><span style="font-family: helvetica;"><span style="font-size: large;">none</span></span></span></td>
<td style="width: 14.2857%;">break</td>
<td style="width: 14.2857%;">elif</td>
<td style="width: 14.2857%;"><span style="color: #339966;"><span style="font-family: helvetica;"><span style="font-size: large;">from</span></span></span></td>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">is</span></span></span></td>
<td style="width: 14.2857%;">pass</td>
<td style="width: 14.2857%;">with</td>
</tr>
<tr>
<td style="width: 14.2857%;"><span style="color: #ff0000;"><span style="font-family: helvetica;"><span style="font-size: large;">true</span></span></span></td>
<td style="width: 14.2857%;"><span style="color: #ffcc00;">class</span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">else</span></span></td>
<td style="width: 14.2857%;">global</td>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">lambda</span></span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">raise</span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">yield</span></span></td>
</tr>
<tr>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">and</span></span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">continue</span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">except</span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">if</span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">nonlocal</span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">return</span></span></td>
<td style="width: 14.2857%;"></td>
</tr>
<tr>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">as</span></span></td>
<td style="width: 14.2857%;"><span style="color: #ffcc00;"><span style="font-family: helvetica;"><span style="font-size: large;">def</span></span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">finally</span></span></td>
<td style="width: 14.2857%;"><span style="color: #339966;"><span style="font-family: helvetica;"><span style="font-size: large;">import</span></span></span></td>
<td style="width: 14.2857%;"><span style="color: #33cccc;"><span style="font-family: helvetica;"><span style="font-size: large;">not</span></span></span></td>
<td style="width: 14.2857%;"><span style="font-family: helvetica;"><span style="font-size: large;">try</span></span></td>
<td style="width: 14.2857%;"></td>
</tr>
</tbody>
</table><h3>二.賦值</h3>
<p>在數學中=為得出一個計算後之值的符號而在python中=則是賦值的意思,而賦值所代表的意思為將一個變數=某一個數字或物件使其作為他的代號,例如:x = 123, 則當我們使用呼應時只需要打上x則能夠顯示出123。而賦值也可以使用在list忠例如:number = [1 , 2 , 3]。</p>
<h2>staring + number(字串+數字)</h2>
<h3>一.字串</h3>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">字串是程式語言中重要的一環，在傳達資訊給使用者及使用者的輸入資料時常常被使用到，只要不以數值表示的資料都可以用字串來表示。再用字串時，python本身有內建一種東西，那就是函數庫裡面已經設定好多種函數。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">字串有索引值得概念，也就是給定一個index值，python便會回傳在字串中該index值所代表的字元。字串本身具有順序性，並可以從中間取出或插入部分資料。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">數字在python裡面可分成兩種傳統:整數和浮點數。整數分為int及bool兩種在邏輯運算式中0和false有一樣的意義，1和true有一樣的效果，而在數值型的運算中則相反。在一般電腦中，數值以二進位儲存並用十進位表示。</span></span></p>
<h3>二.浮點數</h3>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">在浮點數系統中，可分為float、complex與decimal三種類型。float是最常見的浮點數，用來保存倍精度浮點數類型的資料。complex則是用來儲存複數類型的數值。這裡的複數便是我們學的數學裡面的複數。</span></span></p>
<h3>三.格式化</h3>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">有時候，你手上的資訊並不是你想要的格式，這時就需要型態轉換，也就是使用轉型函數來將手上的資訊轉換成可以在你想要進行的操作方式下執行的資料格式。下面是幾種常見的型態轉換:</span></span></p>
<h3>四. 型態轉換</h3>
<p>int(x[,base]) :將X轉換成整數，base式轉換的基數，預設為十進位。<br/>float(x) :將x轉換成浮點數<br/>str(x) :將x轉換成字串 <br/>tuple(s) :將s轉換為<br/>list(s) :將s轉換為list <br/>chr(x) :將x轉換成chr在這當中x為物件，s為字串。</p>
<h2>tuple+list+set+dictonary(序對+串列+集合+字典)</h2>
<h3>一.序對</h3>
<<<<<<< HEAD
<p><span style="color: #ff0000;">序對(tuple)</span>會在()中放置資料，資料內容通常為數值，且<span style="color: #ff0000;">排列的順序是不能更改的</span>，他與串列的編號都是從0開始，下一小章會提到能更改順序的<span style="color: #ff0000;">串列(list)<span style="color: #000000;">，回到tuple，tuple內的資料是從0開始編號，以下為範例。</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">Ex:</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">data=(3,4,5</span></span><span style="color: #ff0000;"><span style="color: #000000;">)</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">data[0]=5  #將第0號的3改成5</span></span></p>
<p><span style="color: #000000;">上述之例子為錯誤示範，因為tuple排列的順序是不可改變的，因<span style="color: #ff0000;"><span style="color: #000000;">data[0]=5是無效指令。</span></span></span></p>
<p><span style="color: #000000;"><span style="color: #ff0000;"><span style="color: #000000;">既然list的彈性比tuple高那為何不能完全取代tuple呢?因為tuple是不能修改的，相對的存取速度自然的比list還快，因此tuple還是有list無法取代的部分。</span></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"></span></span></p><h3>二.串列</h3><h3>三.集合</h3><h3>四.字典</h3><h2>file+module+exception(檔案+模組+例外)</h2>
=======
<p><span style="color: #ff0000;">序對(tuple)</span>會在()中放置資料，資料內容通常為數值，且<span style="color: #ff0000;">排列的順序是不能更改的</span>，下一小章會提到能更改順序的<span style="color: #ff0000;">串列(list)<span style="color: #000000;">，回到tuple，tuple內的資料資料是從0開始編號以下有範例</span></span></p>
<h3>二.串列</h3>
<h3>三.集合</h3>
<h3>四.字典</h3>
<h2>file+module+exception(檔案+模組+例外)</h2>
>>>>>>> c4592e0c84d37c46a25e286ef9f1af4818d10afc
<p></p>
<h3>一.檔案</h3>
<p>在python語法裡如果想要開啟已儲存在電腦中的檔案時，可輸入<span style="color: #ff0000;">open()函數</span><span style="color: #000000;">來開啟，以進行檔案的讀取、修改或寫入等動作。</span></p>
<p><span style="color: #000000;">Ex:flie object=open(file_name<em>[,access_mode][,buffering]</em>)</span></p>
<p><span style="color: #000000;">輸入之指令的格式如例題瑣所示，[]裡面的參數都是可以省略的，而file_name即為想開啟的檔案除了檔案一定也包含了檔案的路徑，如果沒有包含路徑的話，將會被視為此檔案和目前編輯的程式碼處在相同的資料夾中。</span></p>
<p><span style="color: #ff0000;">access_mode</span><span style="color: #000000;">表示想要存取的模式，下面將列出表格來展示。</span></p>
<table border="1" style="border-collapse: collapse; width: 100%;">
<tbody>
<tr>
<td style="width: 19.5896%;">模式</td>
<td style="width: 80.4104%;">描述</td>
</tr>
<tr>
<td style="width: 19.5896%;">r</td>
<td style="width: 80.4104%;">描述以唯讀方式打開文件。文件游標將會放在文件的開頭 。預設模式</td>
</tr>
<tr>
<td style="width: 19.5896%;">rb</td>
<td style="width: 80.4104%;">以唯獨方式打開文件(二進制格式)。文件游標將會放在文件的開頭。預設模式</td>
</tr>
<tr>
<td style="width: 19.5896%;">r+</td>
<td style="width: 80.4104%;">打開一個文件用於讀寫。文件游標將會放在文件開頭</td>
</tr>
<tr>
<td style="width: 19.5896%;">rb+</td>
<td style="width: 80.4104%;">以二進制格式打開一個文件用於讀寫。文件游標將會放在文件開頭</td>
</tr>
<tr>
<td style="width: 19.5896%;">w</td>
<td style="width: 80.4104%;">打開一個文件並且功能只限定於寫入。如果該文件已存在則將其覆蓋。如果該文件不存在，則創立新文件</td>
</tr>
<tr>
<td style="width: 19.5896%;">wb</td>
<td style="width: 80.4104%;">打開一個文件(二進制格式)並且功能只限定於寫入。如果該文件已存在則將其覆蓋。如果該文件不存在，則創立新文件。</td>
</tr>
</tbody>
</table>
<p>而<span style="color: #000000;">buffering代表資料讀入的暫存空間分別由.<span style="color: #ff0000;">0<span style="color: #000000;">、</span>1</span>表示</span></p>
<p><span style="color: #000000;"><span style="color: #ff0000;">0</span>代表沒有暫存空間</span></p>
<p><span style="color: #000000;"><span style="color: #ff0000;">≧1</span>代表有暫存空間，且一次可寫入多少資料量</span></p>
<h3>二.模組</h3>
<p>模組其實就是.py檔，所以儲存起來的.py檔都可當作模組使用。如想使用模組，可以輸入指令<span style="color: #ff0000;">import</span>來叫出。而.py檔裡的內容包含了函數.類別.變數等內容</p>
<p>除了剛剛講到的<span style="color: #ff0000;">import<span style="color: #000000;">外也能使用<span style="color: #ff0000;">from...import<span style="color: #000000;">叫出。</span></span></span></span></p>
<p><span style="color: #000000;">Ex:</span></p>
<p><span style="color: #000000;"><span style="color: #ff0000;">import</span> module1[,<span style="color: #000000;">module2</span><span style="color: #000000;">[,…module]</span></span></p>
<p><span style="color: #000000;"><span style="color: #ff0000;">from </span><span style="color: #000000;"><span style="color: #ff0000;"><span style="color: #000000;">modname </span>import</span> name1[,name2[,…nameN]</span></span></p>
<p><span style="color: #000000;"><span style="color: #000000;">由上面例題可得知import可以一次匯入多個模組，中間則以「，」分隔。</span></span></p>
<p><span style="color: #000000;">from...  import 則是更精確的苗市要使用哪個模組裡的哪個函數。</span></p>
<p><span style="color: #000000;"><span style="color: #000000;"></span></span></p>
<h3>三.例外</h3>
<p>就如標題所示在程式運行時，不可能每次都成功，因此有可能會跳出錯誤的指令碼，因此導致程式中止，為了防止這種麻煩事發生，則衍生出了例外這種配套措施。</p>
<p>如果要啟動配套流程就要輸入<span style="color: #ff0000;">try...except</span></p>
<p><span style="color: #000000;">Ex:</span></p>
<p><span style="color: #000000;">try:</span></p>
<p><span style="color: #000000;">        欲執行</span><span style="color: #000000;">的程式碼T</span></p>
<p><span style="color: #000000;">except</span><span style="color: #000000;">例外情形1<em>[,參數]</em></span></p>
<p><span style="color: #000000;">  欲執行的程式碼1</span></p>
<p><span style="color: #000000;">except</span><span style="color: #000000;">例外情形2<em>[,參數]</em></span></p>
<p><span style="color: #000000;">  欲執行的程式碼2</span></p>
<p><span style="color: #000000;">...</span></p>
<p><span style="color: #000000;">except</span><span style="color: #000000;">例外情形N<em>[,參數]</em></span></p>
<p><span style="color: #000000;">  欲執行的程式碼N</span></p>
<p><span style="color: #000000;">else:</span></p>
<p><span style="color: #000000;">  欲執行的程式碼E</span></p>
<p><span style="color: #000000;">finally:</span></p>
<p><span style="color: #000000;">  欲執行的程式碼F</span></p>
<p><span style="color: #000000;">在<span style="color: #ff0000;">try...except<span style="color: #000000;">語法裡至少要存在一個except敘述，else:和finally:則可選擇要或不要的。</span></span></span></p>
<h2>IF-Else判斷</h2>
<h3>一.單向判斷</h3>
<p>if判斷式是程式語言中的基本判斷式，以此為基礎發展出許多的結構，一支功能完整的程式一定有if判斷式。</p>
<p>在if後面加條件判斷式，一定要加冒號在最後面，然後下一行要縮排，直到結束為止。</p>
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
<h3>二.雙向判斷</h3>
<p>當if無法達成條件時，我們就用else來達成條件。有了else之後，當我們遇到條件不符合時，便會執行else:後面的程式碼。</p>
<h3>三.多向判斷</h3>
<p>通常在使用上，幾乎都是多種條件需要做判斷，在這種狀況下，python用elif來解決。elif是 else if 的縮寫。elif 可以存在許多個，因此可以應付多種情形。</p>
<h3>四.巢狀判斷</h3>
<p>巢狀判斷就是在進行第一次判斷之後在進行下一個條件判斷，且兩條件是有關連的。如此一來就能有更精確的判斷。</p>
<h2>進制法</h2>
<p></p>
<p><span style="font-family: 標楷體; color: #000000;"><span style="font-size: large;">進制可以解讀成<span style="color: #ff0000;">最多數到幾位才進位</span>，雖然目前主流為二進位，不過另外還有八進位、十六進位。</span></span></p>
<p><span style="font-family: 標楷體; color: #000000;"><span style="font-size: large;">我們平常使用的1、2、3、4、5、6、7、8、9為十進位。</span></span></p>
<table border="1" style="border-collapse: collapse; width: 100%; height: 822px;">
<tbody>
<tr style="height: 54px;">
<td style="width: 25%; text-align: center; height: 54px;"><strong><span style="font-size: large;"><span style="font-family: 標楷體;">二進位</span></span></strong></td>
<td style="width: 25%; text-align: center; height: 54px;"><strong><span style="font-size: large;"><span style="font-family: 標楷體;">八進位</span></span></strong></td>
<td style="width: 25%; text-align: center; height: 54px;"><strong><span style="font-size: large;"><span style="font-family: 標楷體;">十六進位</span></span></strong></td>
<td style="width: 25%; text-align: center; height: 54px;"><strong><span style="font-size: large;"><span style="font-family: 標楷體;">十進位</span></span></strong></td>
</tr>
<tr style="height: 48px;">
<td style="width: 25%; text-align: center; height: 48px;">0</td>
<td style="width: 25%; text-align: center; height: 48px;">0</td>
<td style="width: 25%; text-align: center; height: 48px;">0</td>
<td style="width: 25%; text-align: center; height: 48px;">0</td>
</tr>
<tr style="height: 48px;">
<td style="width: 25%; height: 48px; text-align: center;">1</td>
<td style="width: 25%; height: 48px; text-align: center;">1</td>
<td style="width: 25%; height: 48px; text-align: center;">1</td>
<td style="width: 25%; text-align: center; height: 48px;">1</td>
</tr>
<tr style="height: 48px;">
<td style="width: 25%; height: 48px; text-align: center;">10</td>
<td style="width: 25%; height: 48px; text-align: center;">2</td>
<td style="width: 25%; height: 48px; text-align: center;">2</td>
<td style="width: 25%; text-align: center; height: 48px;">2</td>
</tr>
<tr style="height: 48px;">
<td style="width: 25%; height: 48px; text-align: center;">11</td>
<td style="width: 25%; height: 48px; text-align: center;">3</td>
<td style="width: 25%; height: 48px; text-align: center;">3</td>
<td style="width: 25%; text-align: center; height: 48px;">3</td>
</tr>
<tr style="height: 48px;">
<td style="width: 25%; height: 48px; text-align: center;">100</td>
<td style="width: 25%; height: 48px; text-align: center;">4</td>
<td style="width: 25%; height: 48px; text-align: center;">4</td>
<td style="width: 25%; text-align: center; height: 48px;">4</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">101</td>
<td style="width: 25%; height: 48px;">5</td>
<td style="width: 25%; height: 48px;">5</td>
<td style="width: 25%; height: 48px;">5</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">110</td>
<td style="width: 25%; height: 48px;">6</td>
<td style="width: 25%; height: 48px;">6</td>
<td style="width: 25%; height: 48px;">6</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">111</td>
<td style="width: 25%; height: 48px;">7</td>
<td style="width: 25%; height: 48px;">7</td>
<td style="width: 25%; height: 48px;">7</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1000</td>
<td style="width: 25%; height: 48px;">10</td>
<td style="width: 25%; height: 48px;">8</td>
<td style="width: 25%; height: 48px;">8</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1001</td>
<td style="width: 25%; height: 48px;">11</td>
<td style="width: 25%; height: 48px;">9</td>
<td style="width: 25%; text-align: center; height: 48px;">9</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1010</td>
<td style="width: 25%; height: 48px;">12</td>
<td style="width: 25%; height: 48px;">A</td>
<td style="width: 25%; height: 48px;">(10)</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1011</td>
<td style="width: 25%; height: 48px;">13</td>
<td style="width: 25%; height: 48px;">B</td>
<td style="width: 25%; height: 48px;">(11)</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1100</td>
<td style="width: 25%; height: 48px;">14</td>
<td style="width: 25%; height: 48px;">C</td>
<td style="width: 25%; height: 48px;">(12)</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1101</td>
<td style="width: 25%; height: 48px;">15</td>
<td style="width: 25%; height: 48px;">D</td>
<td style="width: 25%; height: 48px;">(13)</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1110</td>
<td style="width: 25%; height: 48px;">16</td>
<td style="width: 25%; height: 48px;">E</td>
<td style="width: 25%; height: 48px;">(14)</td>
</tr>
<tr style="text-align: center;">
<td style="width: 25%; height: 48px;">1111</td>
<td style="width: 25%; height: 48px;">17</td>
<td style="width: 25%; height: 48px;">F</td>
<td style="width: 25%; height: 48px;">(15)</td>
</tr>
</tbody>
</table>
<p style="text-align: center;"><a href="https://home.gamer.com.tw/creationDetail.php?sn=3095871" rel="noopener" target="_blank">https://home.gamer.com.tw/creationDetail.php?sn=3095871</a></p>
<p></p>
<h1>Issue &amp; solution</h1>
<h1>experience</h1>
<h2>week10</h2>
<p>更新p37成最新版本,在新版本中加入的打開eric6的原件,並且由學長教學操作eric6的簡易功能。</p>
<p>何謂eric6:</p>
<p>Eric6是Python编程语言的IDE程序，功能之强大，绝不输於Python平台下的任何IDE程序，占用内存低運行速度快足以令Eric6藐視群雄，最可贵的是與PyQt5结合的更是天衣无缝，简直就是开发GUI程序的绝配。</p>
<p>PyQt5是赖以Python编程语言的外部GUI開發語言，其夯實的底層基礎與强大的可視化界面設計讓PyQt5成为Python语言GUI開發的佼佼者，更新速度之快，开发GUI程序的速度之快，可以说其它GUI開發语言所望塵莫及。</p>
<p>雖说Eric6與PyQt5结合使用可快速開發GUI程序，但是對PyQt5基礎语言一竅不通也只能是望梅止渴了。所以，要想真正的發揮Eric6与PyQt5结合的優勢，多學一些PyQt5基礎语言是有必要的。</p>
<p>學PyQt5基礎语言當然要用Eric6了，不说Eric6的强大優勢，至少用Eric6来學可以在學習期间让我们對他熟悉，為以後结合PyQt5使用垫下基礎。</p>
<p>eric操作參考網址:<a href="https://blog.csdn.net/TST_STUDIO/article/details/78235468">https://blog.csdn.net/TST_STUDIO/article/details/78235468</a></p>
<h2>week11</h2>
<p>heroku與github連接與使用heroku在動態網頁上能夠修改資訊:</p>
<p>heroku與github連接必須在github中加入兩項文字檔和一個資料檔分別為:runtime.txt、procfile、requirements.txt，在檔案中必須加入的文字且大小寫必須要正確，打小寫會影響到之後的成功與否而成功連接上heroku後就能夠直接更改動態網站且可以在heroku中顯示出來。</p>
<p>另外還有一種現在廣泛使用的軟體為javascrip，在撰寫後難以在回頭審視之前所撰寫的檔案也沒有排版之功能，所以我們用的python來當作學習的工具。</p>
<p>heroku動態分組網站網址:<a class="underline" href="https://cp2018-bg5.herokuapp.com/" rel="noopener" target="_blank">https://cp2018-bg5.herokuapp.com/</a></p>
<p><span style="color: #ff0000;">heroku連接github截圖:</span></p>
<p></p>
<p><img alt="" height="220" src="/images/%E6%93%B7%E5%8F%96.PNG" style="background-color: #ffffff; color: #626262;" width="739"/></p>
<p><span style="color: #ff0000;">requirements.txt內容所需之字串</span></p>
<p><img alt="" height="164" src="/images/a.PNG" width="337"/></p>
<p><span style="color: #ff0000;">runtime.txt內容所需之字串</span></p>
<p><img alt="" height="80" src="/images/b.PNG" width="358"/></p>
<p><span style="color: #ff0000;">procfile內容所需之字串</span></p>
<p><img alt="" height="83" src="/images/c.PNG" width="368"/></p>
<h2>week12</h2>
<h3>十大遊戲開發引擎優缺點對比</h3>
<p style="text-align: left;"><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="background-color: #ffffff; color: #ff0000;"><strong>Unity3D</strong></span><br/>Unity3D具有其他引擎難以匹敵的用戶量而且你只需要付費一次，這對於很多開發商來說當然是非常具有吸引力。以下是Unity引擎的優點和缺點：</span></span></p>
<p><img alt="" height="182" src="/images/Unity_Technologies_logo.svg.png" width="500"/></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：業內最具競爭力的授權條款；易於使用而且兼容所有遊戲平台；開發者社區支持強大；學習門檻非常第；開發商使用率最高。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：工具數量有限，所以開發商必須給自己創作工具；做複雜和多樣化的效果比較耗時。</span></span></p>
<p></p>
<p style="text-align: left;"><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="color: #ff0000;"><strong>虛幻引擎</strong><br/><span style="color: #000000;">數年以來，虛幻引擎一直是做高端EA遊戲最受歡迎的引擎。《戰爭機器》、《蝙蝠俠：阿卡漢姆瘋人院》(Batman: Arkham Asylum)、《質量效應》以及很多大作都是出自該引擎之手，以下是虛幻引擎的優點和缺點：</span></span></span></span></p>
<p><img alt="éä¿ ç¶²" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190353692.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：開發商使用率較高，開發商社區支持支持強大，有視頻教程和大量資源。最佳的引擎支持並且隨時更新其他引擎平台的功能，每次更新都會增加新工具，而且管理相對容易，有些工具甚至小學生都會使用。兼容大多數平台，比如iOS、Android、Linux、Mac、Windows和大多數遊戲主機。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：授權條款只適合大作，商業授權價格為99美元，在遊戲收入超過5萬美元之後，必須支付25%的分成。也有一些開發者抱怨有些工具不好用，學習門檻較高。</span></span></p>
<p></p>
<p style="text-align: left;"><span style="color: #ff0000;"><span style="font-size: large;"><span style="font-family: 標楷體;"><strong>CryEngine 3</strong><br/><span style="color: #000000;">該遊戲引擎以優質的畫面輸出獲得了大量開發者認可，如果你要做視覺出色的遊戲，這款引擎絕對是最理想的選擇。不過，該引擎也有自己的問題。</span></span></span></span></p>
<p><img alt="éä¿ ç¶²" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190358288.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：CryEngine 3可以讓你的遊戲更美麗，Flowgraph工具的美術編程能力非常強悍。該引擎具備最強悍的音頻工具，所以音頻策劃和程序猿們非常喜歡。該遊戲引擎還提供目前最為簡單易用的AI代碼技術，對於初入行的開發者，該引擎的UI觸手可及。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：免費榜缺乏客戶支持；推出時間相對較晚，開發者社區還不夠強大；學習門檻對於初入行這比較高。</span></span></p>
<p style="text-align: left;"><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="color: #ff0000;"><strong>HeroEngine</strong><br/></span>該引擎在MMO和在線遊戲領域獲得了非常高的人氣，代表作《星球大戰：舊共和國》。對於新入行的開發者以及初創公司來說，授權費用較高，不過，如果你有一個非常具備潛力的項目，該引擎還是非常值得考慮的。以下是使用該引擎之前需要考慮的優點與缺點：</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190400923.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：提供多個開放世界地圖，而且可以實現無縫轉換；提供相對完善的AI；地圖工具簡單易用，並且集成了多個工具；腳本強大，足夠幫助開發者研發複雜的項目、獲得需要的資源；可以通過HeroCloud支持客戶服務器。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：腳本引擎強大但不夠直觀；HeroEngine和HeroCloud對於初創公司來說成本較高；新開發者學習門檻較高。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"></span></span></p>
<p style="text-align: center;"><strong><span style="font-size: large; color: #ff0000;"><span style="font-family: 標楷體;">Rage Engine</span></span></strong></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"><br/>該引擎的用途非常多，比較知名的遊戲包括GTA Ⅲ、GTA：Vice City、GTA：San Andreas和很多知名大作。以下是該引擎的一些優點和缺點：</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190403347.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：兼容與處理較大世界觀和天氣特效方面非常出色；複雜的AI設計方面領先其他引擎；非常適合多種玩法的遊戲；網絡編程速度非常快；非常具有吸引力的畫質水平。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：和其他頂級引擎相比界面比較差；對於鍵盤和鼠標控制優化做的不足。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"></span></span></p>
<p style="text-align: left;"><strong><span style="font-size: large; color: #ff0000;"><span style="font-family: 標楷體;">Project Anarchy</span></span></strong></p>
<p style="text-align: left;"><span style="font-size: large;"><span style="font-family: 標楷體;">該引擎是一套完整的端到端遊戲引擎和尖端移動設備工具組，受到很多遊戲開發者讚譽，但同樣具有一些缺點。</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190406774.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：提供免費的手游研發工具(主要平台，比如iOS、Android和Tizen)；擁有非常強悍的程序調試工具；非常活躍的開發者社區與論壇；編輯器非常強大；音頻輸出能力非常好；優秀的Havok AI；vForge為開發者提供大量的定制化選擇。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：不支持Mac和Linux開發環境；沒有新手教學；對於初創公司來說成本較高。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"><strong><span style="color: #ff0000;">GameSalad</span></strong><br/>這款引擎據說是不用寫代碼就能做遊戲。這並不是個噱頭，該引擎的確支持這樣的功能。不過GameSalad一些功能也並不好用。</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190408786.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：如果你想獨立開發一款iPhone遊戲，該引擎非常適合你；對於快速實現遊戲想法來說，GameSalad是個不錯的引擎；兼容流行的手游研發平台，比如Cocona和Moai。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：研發工具限制性比較強；缺乏大量的iOS功能；不兼容所有的平台。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="color: #ff0000;"><strong>GameMaker：Studio</strong></span><br/>作為開發者，如果你想要一款簡單而又快速直接的遊戲引擎開始項目，那麼GameMaker：Studio絕對是理想之選；儘管授權費有些貴，但能夠獲得的功能還是物有所值的；以下是該引擎的優點和缺點：</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190410171.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：對於所有開發者來說都非常簡單和直接；加入了編程語言(GML)；不需要處理內存管理或者多線程等方面的任務；獨立於任何平台。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：在內存問題方面的程序調試比較麻煩；授權費相對昂貴。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;"><span style="color: #ff0000;"><strong>App Game Kit</strong></span><br/>該引擎是真正的跨平台研發工具，非常易用、簡單，而且比較靈活。以下是該引擎的優缺點：</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190411958.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：可以為多平台寫代碼，包括Android、iOS、Windows、Mac和Linux；集成Design Environment，可以在任何設備調試；加入了IAP、AdMob以及Push等工具；AGK腳本非常強大。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：使用者較少，所以學習起來相對較慢；BUG比較多；傳感器或者GPS支持比較差。</span></span></p>
<p style="text-align: left;"><span style="font-size: large;"><span style="font-family: 標楷體;"><strong><span style="color: #ff0000;">Cocos2D</span></strong><br/>很多策劃認為Cocos2D對於新入行的開發者來說不僅具備大量功能，而且非常容易上手。雖然該引擎比較複雜，但值得一提的是其功能和靈活性，以下是該引擎的優缺點：</span></span></p>
<p><img alt="æ¸¸ä¾ ç½" src="http://img1.ali213.net/picfile/News/2014/08/26/pm/584_20140826190412055.jpg"/></p>
<p></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">優點：強大而且靈活；理論上來講，你可以為自己的遊戲加入所有的iOS功能；提供成熟的框架和多種工具；開源、免費，社區支持強大。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">缺點：和同類引擎相比比較複雜；學習門檻相對較高；特別適合Mac或者iOS平台，不過並不是跨平台引擎。</span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">如今人們在各種平台都玩遊戲，比如主機、移動設備甚至是智能電視，所以，開發商在選擇引擎的時候，需要找到適合自己技術並且能夠滿足目標市場要求的引擎，因此合適的引擎對於開發商們來說尤其重要，特別是新入行的開發者們<br/><br/></span></span></p>
<p><span style="font-size: large;"><span style="font-family: 標楷體;">https://blog.csdn.net/enweitech/article/details/72820183</span></span></p>
<h2>week13</h2>
<p>python遊戲範例和開啟方式</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XSFt2rXHEk8" width="560"></iframe></p>
<h2>week14</h2>
<p>本周進度和如何改變password。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DUQ1xcQIOl8" width="560"></iframe></p>
<h2>week15</h2>
<h2>week16</h2>
<h2>補課1</h2>
<h3>控制流程和loop應用</h3>
<p>講解了for i in range的應用,例如:使用for i in range(10)就能夠使數列由1排列至時若應用在物件上也能夠使物件達到同等效果,不必逐項填寫。</p>
<p>而loop也能夠使用有條件之while loop當某樣條件成立時才會繼續運行此迴圈,也能夠使用此迴圈中加入if 迴圈使得迴圈的功能更加增長。</p>
<p><span style="color: #ff0000;">補充</span>:同類型迴圈中有同類型迴圈時我們稱作巢狀,例如:[[]]的類型中括號內已while迴圈定義時我們稱作巢狀。</p>
<p>for i in range實例:</p>
<p>為了讓兩顆球之軌跡能夠達到同步,但又不想要有過度攏長之命令列,所以使用for i in range之迴圈方式達成定義。</p>
<p><img alt="" height="318" src="/images/222.PNG" width="427"/></p>
<h2>補課2</h2>
<h3>物件導向及非物件導向</h3>
<p><span style="color: #ff0000;">物件導向</span>中非常重要的因素包括了<span>類別 / 類型 (Class),物件 (Object)兩種,而函式也是一種物件,而物件導向中的類別通常含有封裝性 (Encapsulation),繼承, (Inheritance)多形 (Polymorphism),抽象性 (Abstraction)等特性。</span></p>
<p><span style="color: #ff0000;">非物件導向:</span></p>
<ol>
<li><span style="color: #ff0000;"><span style="color: #000000;">包含<span>變數 (Variable):變數為能夠將依複雜之資料已依字元或者代號將其封裝並且便於攜帶使用。</span></span></span></li>
<li><span style="color: #ff0000;"><span style="color: #000000;"><span>函式 (Function):控制變數或者一物件使其行動或者定義其輸入和輸出。</span></span></span></li>
</ol>
<h2>補課3</h2>
<h3>複製與參照</h3>
<p>Def為function而照規則function和class底下若要呼叫底層物件則必須使用global才能夠呼叫所以這裡必須使用global，這裡說明的是function和class能夠把這兩個想成大括號，而global則是能夠跳過這個大括號往外部去抓想要的物件，也就是先後順序的概念。</p>
<p></p>
<h1>Attend＆Absence</h1>
<p>Attend：O</p>
<p>Absence：X</p>
<p>Late：△</p>
<table border="1" height="446" style="border-collapse: collapse; width: 83.1272%; height: 559px;">
<tbody>
<tr style="height: 49px;">
<td style="width: 10%; height: 49px;"></td>
<td style="width: 10.1475%; height: 49px;">WEEK10</td>
<td style="width: 9.85251%; height: 49px;">WEEK11</td>
<td style="width: 10%; height: 49px;">WEEK12</td>
<td style="width: 10%; height: 49px;">WEEK13</td>
<td style="width: 10%; height: 49px;">WEEK14</td>
<td style="width: 10%; height: 49px;">WEEK15</td>
<td style="width: 10%; height: 49px;">WEEK16</td>
<td style="width: 1.25%; height: 49px;">補課1</td>
<td style="width: 1.38504%; height: 49px;">補課2</td>
<td style="width: 2.5%; height: 49px;">補課3</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;"><span>邱正宇</span></td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;">李建杰</td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;">杜玗宸</td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;">杜彥霆</td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;">林子欽</td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
<tr style="height: 85px;">
<td style="width: 10%; height: 85px;">范誠宇</td>
<td style="width: 10.1475%; text-align: center; height: 85px;">O</td>
<td style="width: 9.85251%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; text-align: center; height: 85px;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 10%; height: 85px; text-align: center;">O</td>
<td style="width: 1.25%; height: 85px;">O</td>
<td style="width: 1.38504%; height: 85px;">O</td>
<td style="width: 2.5%; height: 85px;">O</td>
</tr>
</tbody>
</table>
<p></p>
<h1>Final report</h1>
<h2>13週</h2>
<p><br/><img alt="" height="1112" src="/images/13.PNG" width="1000"/></p>
<h2>14週</h2>
<p><a href="https://s2.aconvert.com/convert/p3r68-cdx67/cbqa7-pw0kk.html"><img alt="" height="804" src="/images/14-1.png" width="1000"/></a></p>
<p><img alt="" height="1444" src="/images/14-2.png" width="1000"/></p>
<h2>15週</h2>
<p><img alt="" height="1353" src="/images/15-1.png" width="1000"/></p>
<<<<<<< HEAD
<p><img alt="" height="1040" src="/images/15-2.png" width="1000"/></p><h2>16週</h2>
<p><img alt="" height="1161" src="/images/16.png" width="1000"/></p><h2>期末課程學習報告影片</h2>
=======
<p><img alt="" height="1040" src="/images/15-2.png" width="1000"/></p>
<h2>16週</h2>
<p><img alt="" height="1161" src="/images/16.png" width="1000"/></p>
<h2>期末課程學習報告影片</h2>
>>>>>>> c4592e0c84d37c46a25e286ef9f1af4818d10afc
<h3>40723221邱正宇的期末課程學習報告</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZggxeQtdhj0" width="560"></iframe></p>
<p style="text-align: center;"></p>
<h1>前導知識</h1>
<p>CLI</p>
<p>IPV4 VS IPV6</p>
<h2>CLI  vs  GUI</h2>
<p style="text-align: center;"><span style="background-color: #ffffff; color: #ff0000;"><strong><span style="font-size: x-large; background-color: #ffffff;">CLI ( commamd line interface ) 命令行介面</span></strong></span></p>
<p style="text-align: center;"><span style="background-color: #ffffff; color: #000000;"><span style="font-size: x-large; background-color: #ffffff;">在滑鼠問世前</span><strong><span style="font-size: x-large; background-color: #ffffff;"><span lang="zh-TW">，</span></span></strong><span style="font-size: x-large; background-color: #ffffff;"><span lang="zh-TW">鍵盤為使用者與作業系統溝通橋樑，</span></span></span></p>
<p></p>
<pre class="tw-data-text tw-ta tw-text-small" data-fulltext="" data-placeholder="Translation" dir="ltr" id="tw-target-text"><span lang="zh-TW">通常認為，命令行界面（CLI）沒有圖形用戶界面（GUI）那麼方便用戶操作。因為，命令行界面的軟件通常需要用戶記憶操作的命令，但是，由於其

本身的特點，命令行界面要較圖形用戶界面節約計算機系統的資源。在熟記命令的前提下，使用命令行界面往往要較使用圖形用戶界面的操作速度要快。

所以，在的圖形用戶界面的操作系統中，通常都保留著可選的命令行界面。
傳統的Unix環境是 CLI（命令行界面），即在命令行下鍵入命令，執行想要的操作。相比之下，這種方式執行起來更快，功能也更強，不足之處是用

戶需要了解相關操作的命令。早期的計算機操作系統都只有命令行操作模式，沒有使用非常流行的“圖形用戶界面（GUI）。
雖然許多計算機系統都提供了圖形化的操作方式，但是卻都沒有因而停止提供文字模式的命令行操作方式，相反的，許多系統反而更加強這部份的功

能，例如Windows就不只加強了操作命令的功能和數量，也一直在改善Shell Programming的方式。而之所以要加強、改善</span></pre>
<p style="text-align: left;"><strong><span style="font-size: large; color: #ff0000;"></span></strong></p>
<p style="text-align: center;"></p>
<p><a href="https://searchwindowsserver.techtarget.com/definition/command-line-interface-CLI" rel="noopener" target="_blank">https://searchwindowsserver.techtarget.com/definition/command-line-interface-CLI</a></p>
<p></p>
<h2>IDE</h2>
<p><a href="https://techterms.com/definition/gui" rel="noopener" target="_blank">https://techterms.com/definition/gui</a></p>
<p><a href="https://searchsoftwarequality.techtarget.com/definition/integrated-development-environment" rel="noopener" target="_blank">https://searchsoftwarequality.techtarget.com/definition/integrated-development-environment</a></p>
<p style="text-align: center;"><span style="color: #ff0000;"><strong><span style="font-family: 標楷體;"><span style="font-size: x-large;">IPV4 與 IPV6差異</span></span></strong></span></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">這兩個世代的網路協定，最明顯的差異就在於其提供的網路位址數量。</span></span><span style="font-family: 標楷體;"><span style="font-size: large;">IPv4的位址格式是採用32位元長度，位址能提供2的32次方個，換算後約42億個。雖然IPv4有這麼多IP位址，但依舊在2011年的2月3日消耗殆盡。</span></span></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">而IPv6的位址格式則採用128位元長度，其位址能提供2的128次方個。它所能提供的IP位址，遠遠超過IPv4的數量簡而言之，轉換到IPv6後，IP位址的數量多到幾乎不可能用盡。</span></span></p>
<p></p>
<p style="text-align: center;"><strong><span style="font-size: x-large; color: #ff0000;"><span style="font-family: 標楷體;">IPV4</span></span></strong></p>
<p><span style="font-size: large; font-family: 標楷體;">IPv4的IP位址是由32位元所組成，原始的表示方式是8個位元為一個單位，分4個部分。每個部分以2進位表示，並以「.」做區隔，譬如：「10110110.11101001.01001100.11111111」。</span></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;">不過這樣的表示法太長，不便記憶。所以通常都以10進位的方法表示，而每個部份的數字會呈現0至255的整數</span></span></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;"></span></span></p>
<p style="text-align: center;"><span style="color: #ff0000;"><strong><span style="font-family: 標楷體;"><span style="font-size: x-large;">IPV6</span></span></strong></span></p>
<p><span style="font-size: large; font-family: 標楷體;">IPv6的IP位址則是128位元組成，表示方式是使用8組數字，每組為4個字元的16進位方法表示。而區隔每個部分的方式亦與IPv4不同，是以「:」表示。譬如「1079:0BD3:6ED4:1D71:414B:2E2A:7144:72BE」，這樣就是一組標準的IPv6網路位址。</span></p>
<p><span style="font-size: large; font-family: 標楷體;">不過IPv6的位址表示法太長，所以位址有所謂的省略規則，以下為2個位址省略規則：</span></p>
<p><span style="font-size: large; font-family: 標楷體;">規則1：為每組數字的第一個0可以省略，若整組皆為0，則以0表示。譬如，「0DB8」可以省略為「DB8」，「0000」則為「0」。</span></p>
<p><span style="font-size: large; font-family: 標楷體;">規則2：為連續出現的0000可以省略成「::」。譬如：「:0000:0000:0000:0000:」可以省略成「:0000:0000:0000::」、「:0:0:0:0:」、「:0::0:」或「::」。</span></p>
<p><span style="font-size: large; font-family: 標楷體;">但需注意的是，由於「::」表示為連續且數量多的0，所以如果位址中出現2個「::」時，會讓人搞不清楚實際代表的位址。因為這樣，在位址省略規則中有明訂，對於一個IPv6位址，只能出現一次「::」來省略0。</span></p>
<p><span style="font-size: large; font-family: 標楷體;">由於IPv6的位址經過省略後，依舊不方便一般人記憶。所以在網頁存取位址，或撰寫應用程式呼叫網址時，建議不要直接使用IPv6位址，應該使用DNS網域名稱會較為方便，</span><span style="font-size: large; font-family: 標楷體;">除了表示方式不同外，兩者間的位址型態也有些許差異。像IPv6提供Unicast、Anycast及Multicast，三種位址型態。其中Unicast對應單點傳送、Multicast則取代廣播，只有這兩點與IPv4類似。而Anycast則是發送給群組，但只有最近的介面會接收到。</span></p>
<p><a href="https://www.ithome.com.tw/tech/92046" rel="noopener" target="_blank"><span style="font-size: large; font-family: 標楷體;">https://www.ithome.com.tw/tech/92046</span></a></p>
<p><span style="font-family: 標楷體;"><span style="font-size: large;"></span></span></p>
<h2>IPV4 與 IPV6差異</h2>
<p><img alt="" height="314" src="/images/01.PNG" width="1000"/></p>
<p><span><span style="font-family: 標楷體;"><span style="font-size: large;">網路通訊協定（Internet Protocol，IP）是用於網路交換封包的一種協定，它定義了定址方式及資料的封裝結構。簡單來說，就是你電腦的地址，而</span></span></span><span><span style="font-family: 標楷體;"><span style="font-size: large;">目前最被廣泛使用的網路協定為IPv4，現代人上網使用的任何服務幾乎都使用到它。而近幾年經常被提及的IPv6則是被視為繼承IPv4的下一代網路協定。</span></span></span></p>
<p><span><span style="font-family: 標楷體;"><span style="font-size: large;">IPV6起源是因90年代有學者擔心IPv4位址不夠使用，所以重新規畫，因此IPv6除了在位址數量上大幅增加外，更進一步針對安全性、QoS等問題加以改進。</span></span></span></p>
<p>雖然這兩個協定似乎只是版本上的差異，但實際上它們是徹底完全不同的兩個協定。也因為這樣，IPv4與IPv6不能互通，IPv4的用戶只能連線到IPv4的網站，且IPv6亦然。而兩者間較明顯的差異比較如下：</p>
<p><strong>位址的數量</strong></p>
<p>這兩個世代的網路協定，最明顯的差異就在於其提供的網路位址數量。IPv4的位址格式是採用32位元長度，位址能提供2的32次方個，換算後約42億個。雖然IPv4有這麼多IP位址，但依舊在2011年的2月3日消耗殆盡。</p>
<p>而IPv6的位址格式則採用128位元長度，其位址能提供2的128次方個。它所能提供的IP位址，遠遠超過IPv4的數量，預估能讓地球上每個人都分到100萬個IP位址，或是地球上每平方公尺面積皆提供1000多個IP位址。簡而言之，轉換到IPv6後，IP位址的數量多到幾乎不可能用盡。</p>
<p><strong>位址表示方式</strong></p>
<table border="1" cellpadding="4" cellspacing="0" class="table ibm-grid" frame="border" rules="all" summary="">
<thead align="left" class="thead">
<tr class="row">
<th class="entry" id="d19610e202" valign="top" width="32.95454545454545%">IPv4</th>
<th class="entry" id="d19610e204" valign="top" width="39.77272727272727%">IPv6</th>
</tr>
</thead>
<tbody class="tbody">
<tr class="row">
<td class="entry" headers="d19610e200 " valign="top" width="27.27272727272727%"><strong class="ph b" id="rzai2compipv4ipv6__compaddress"><a name="rzai2compipv4ipv6__compaddress"></a>Address（位址）</strong></td>
<td align="left" class="entry" headers="d19610e202 " valign="top" width="32.95454545454545%">32 位元長（4 個位元組）。 位址由一個網路和一個主電腦部分組成（根據位址類別而定）。 根據起始幾個位元定義不同位址類別：A、B、C、D 或 E。 IPv4 位址總數為 4 294 967 296。
<p class="p">IPv4 位址的文字形式為<span> </span><samp class="ph codeph">nnn.nnn.nnn.nnn</samp>，其中 0&lt;=<samp class="ph codeph"><var class="keyword varname ibm-item-note-alternate">nnn</var></samp>&lt;=255，每一個<span> </span><samp class="ph codeph"><var class="keyword varname ibm-item-note-alternate">n</var></samp><span> </span>是一個十進位數。可以省略前導零。最大列印字元數是 15，不計算遮罩。</p>
</td>
<td align="left" class="entry" headers="d19610e204 " valign="top" width="39.77272727272727%">128 位元長（16 個位元組）。 基本架構是以 64 位元代表網路號碼，以 64 位元代表主電腦號碼。 通常 IPv6 位址的主電腦部分（或它的一部分）將衍生自 MAC 位址或其他介面 ID。
<p class="p">根據子網路字首，IPv6 有比 IPv4 更複雜的架構。</p>
<p class="p">IPv6 位址數目是 IPv4 位址數目的 10<sup class="ph sup">28</sup><span> </span>(79 228 162 514 264 337 593 543 950 336) 倍。IPv6 位址的文字形式為<span> </span><samp class="ph codeph">xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</samp>，其中的每一個<span> </span><samp class="ph codeph">x</samp><span> </span>是一個十六進位數字，代表 4 個位元。可以省略前導零。在文字形式的位址中可以使用雙冒號 (<samp class="ph codeph">::</samp>) 一次，以指定任意個 0 位元。例如，<samp class="ph codeph">::ffff:10.120.78.40</samp><span> </span>是 IPv4 對映的 IPv6 位址。</p>
</td>
</tr>
</tbody>
</table>
<p><strong>表頭格式與功能</strong></p>
<p>IPv6的表頭格式是改良自IPv4，它有大幅度的修改，讓表頭格式更為簡化及具有擴充性。IPv6與IPv4共同的欄位有</p>
<p>Version</p>
<p></p>
<p>Source Address</p>
<table border="1" cellpadding="4" cellspacing="0" class="table ibm-grid" frame="border" rules="all" summary="">
<tbody class="tbody">
<tr class="row">
<td class="entry" headers="d19610e200 " valign="top" width="27.27272727272727%"><strong class="ph b" id="rzai2compipv4ipv6__compsourceaddr">Source address selection（來源端位址選擇）</strong></td>
<td align="left" class="entry" headers="d19610e202 " valign="top" width="32.95454545454545%">應用程式可以指定來源 IP（通常使用 sockets<span> </span><samp class="ph codeph">bind()</samp>）。 如果它連結到 INADDR_ANY，則會根據路徑選擇來源 IP。</td>
<td align="left" class="entry" headers="d19610e204 " valign="top" width="39.77272727272727%">就 IPv4 而言，應用程式可以使用<span> </span><samp class="ph codeph">bind()</samp><span> </span>指定來源 IPv6 位址。類似 IPv4，它可以讓系統使用 in6addr_any 選擇 IPv6 來源位址。 但是因為 IPv6 線路有許多 IPv6 位址，所以選擇來源 IP 的內部方法不同。</td>
</tr>
</tbody>
</table>
<p>Destination Address</p>
<p></p>
<p>還有部分欄位功能類似，名稱卻不同。譬如Payload Length取代了Datagram Length、Next Header取代Protocol，以及Hop Limit取代TTL。</p>
<p>而IPv6亦增加了Flow Label及Priority等兩個欄位，它們的功能是用來支援像視訊、語音這類即時服務的需求，以提高QoS的品質。</p>
<p>就Flow Label欄位來說，IPv6的封包能夠在該欄位留下標記。在傳輸時，一連串的封包會要求所經過的路由器，提供特別的處理。而路由器則會透過該欄位，辨識封包的Flow Level；而Priority則可以設定封包傳輸的優先順序，透過這欄位的檢查，讓較重要的封包優先傳送。</p>
<p><span><span style="font-family: 標楷體;"><span style="font-size: large;"><a href="https://www.ithome.com.tw/tech/92046">https://www.ithome.com.tw/tech/92046</a></span></span></span></p>
<p><span><span style="font-family: 標楷體;"><span style="font-size: large;">https://www.ibm.com/support/knowledgecenter/zh-tw/ssw_ibm_i_71/rzai2/rzai2compipv4ipv6.htm#rzai2compipv4ipv6__compaddress</span></span></span></p>